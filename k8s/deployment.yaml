apiVersion: apps/v1
kind: Deployment
metadata:
  name: parcela-backend-deployment
  labels:
    app: parcela-backend
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: parcela-backend
  template:
    metadata:
      labels:
        app: parcela-backend
        tier: backend
    spec:
      containers:
        - name: parcela-backend
          image: parcela-backend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3000"
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: db-host
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: db-port
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: db-name
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: db-user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: db-password
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: mongo-uri
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: jwt-secret
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: parcela-backend-service
  labels:
    app: parcela-backend
    tier: backend
spec:
  selector:
    app: parcela-backend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      name: http
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secrets
type: Opaque
stringData:
  # Database configuration
  db-host: "sqlserver-service"
  db-port: "1433"
  db-name: "parcela_db"
  db-user: "sa"
  db-password: "TuPasswordSuperSecreto123!"

  # MongoDB configuration
  mongo-uri: "mongodb://mongo-service:27017/parcela_logs"

  # JWT Secret
  jwt-secret: "tu-jwt-secret-super-seguro-cambialo-en-produccion"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: parcela-backend-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://www.leadscrm.store"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
spec:
  rules:
    - host: api.leadscrm.store
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: parcela-backend-service
                port:
                  number: 3000
